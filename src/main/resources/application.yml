#mybatis配置xml文件
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml



spring:
  shardingsphere:
    datasource:
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://47.101.58.140:3306/edu_db_1?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 111111
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://47.101.58.140:3306/edu_db_2?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 111111

    sharding:
      tables:
        course:
          #配置指定数据库和 course 表规则
          actual-data-nodes: m$->{1..2}.course_$->{1..2}
          #数据库分片策略
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: m$->{user_id%2 + 1}

          #数据表分片策略
          table-strategy:
            inline:
              sharding-column: cid
              algorithm-expression: course_$->{cid%2 + 1}
          # 指定 course 表里边主键生成策略   SNOWFLAKE   雪花算法
          key-generator:
            column: cid
            type: SNOWFLAKE
      #所有默认数据库分片策略
#      default-database-strategy:
#        inline:
#          sharding-column: user_id
#          algorithm-expression: m$->{user_id%2 + 1}

    #打开sql输出日志
    props:
      sql:
        show: true
  #一个实体类对应多个表
  main:
    allow-bean-definition-overriding: true
